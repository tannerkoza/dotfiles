#!/bin/sh

### Environment Variables & Constants ###
export KEEP_ZSHRC=yes

SYSTEM_TYPE=$(uname -s)

# colors for msg output
red="\033[91m"
green="\033[92m"
blue="\033[94m"
yellow="\033[93m"
white="\033[97m"
no_color="\033[0m"

### Functions ###
print_header() {
  echo "${green}
       _     _   ___ _ _
     _| |___| |_|  _|_| |___ ___
   _| . | . |  _|  _| | | -_|_ -|
  |_|___|___|_| |_| |_|_|___|___|${yellow}
  BOOTSTRAP SCRIPT
" >&1
}

print_footer() {
  echo "${yellow}
  DOTFILE BOOTSTRAP IS COMPLETE!${red}
  Log out${blue} and${red} login${blue} to apply changes!
" >&1
}

print_msg() {
  echo "${green}=>${no_color}${blue}" "${@}" "${no_color}" >&1
}

install_zsh_plugins() {
  print_msg "installing zsh plugins..."
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.zsh}/plugins/zsh-autosuggestions
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
}

install_docker() {
  print_msg "installing docker..."

  # if [ "$SYSTEM_TYPE" = "Darwin" ]; then

  # fi

  if [ "$SYSTEM_TYPE" = "Linux" ]; then
    sudo apt-get remove docker docker-engine docker.io containerd runc
    sudo mkdir -m 0755 -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo \
      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" |
      sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
    sudo apt-get update
    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  fi
}

install_rye() {
  print_msg "installing rye..."
  curl -sSf https://rye.astral.sh/get | bash
}

install_lazygit() {
  print_msg "installing lazygit..."
  LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_arm64.tar.gz"
  tar xf lazygit.tar.gz lazygit
  sudo install lazygit /usr/local/bin
}

update_and_install_packages() {
  if [ "$SYSTEM_TYPE" = "Darwin" ]; then
    print_msg "updating and upgrading brew packages..."
    sudo brew update && sudo brew upgrade
  fi

  if [ "$SYSTEM_TYPE" = "Linux" ]; then
    print_msg "updating and upgrading apt-packages..."
    sudo apt update && sudo apt upgrade

    # install apt-packages from dotfile
    print_msg "installing apt-packages from .apt-packages file..."
    xargs sudo apt-get install -y <~/.apt-packages
  fi
}

install_homebrew() {
  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    print_msg "installing homebrew..."
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    print_msg "updating homebrew bundle..."
    brew bundle --global
  fi
}

### Execute Commands ###
print_header

update_and_install_packages

if [ "$SYSTEM_TYPE" = "Darwin" ]; then
  install_homebrew
fi

# install pip-packages from dotfile
# print_msg "installing pip-packages from .pip-packages file..."
# pip install -r ~/.pip-packages

# install rye
install_rye

# install docker
if [ -x "$(command -v docker)" ]; then
    print_msg "docker is installed..."
else
    install_docker
fi

# install lazygit
install_lazygit

# install oh-my-zsh with curl
install_zsh_plugins

print_msg "installing oh-my-zsh without overwriting .zshrc..."
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

print_footer
